{"ast":null,"code":"import axios from 'axios';\nimport { toastError } from './ToastService';\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8080'\n});\naxiosInstance.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    toastError(`Error: ${error.response.data.error || error.message}`);\n  } else {\n    toastError('Network error. Please try again.');\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","toastError","axiosInstance","create","baseURL","interceptors","response","use","error","data","message","Promise","reject"],"sources":["/Users/umidjontursunov/IdeaProjects/contactappfront/src/api/axiosInstance.js"],"sourcesContent":["import axios from 'axios';\nimport { toastError } from './ToastService';\n\nconst axiosInstance = axios.create({\n    baseURL: 'http://localhost:8080',\n});\n\naxiosInstance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response) {\n            toastError(`Error: ${error.response.data.error || error.message}`);\n        } else {\n            toastError('Network error. Please try again.');\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default axiosInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,gBAAgB;AAE3C,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/BC,OAAO,EAAE;AACb,CAAC,CAAC;AAEFF,aAAa,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAClCD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACP,IAAIA,KAAK,CAACF,QAAQ,EAAE;IAChBL,UAAU,CAAC,UAAUO,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACE,OAAO,EAAE,CAAC;EACtE,CAAC,MAAM;IACHT,UAAU,CAAC,kCAAkC,CAAC;EAClD;EACA,OAAOU,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeN,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}